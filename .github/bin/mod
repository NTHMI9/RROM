#!/bin/bash
TOME="$GITHUB_WORKSPACE"
tenmamay=$(sudo grep 'ro.product.vendor.device' /mnt/tmp/vendor/build.prop | awk -F= '{print $2}' | awk '{$1=$1}{print}')
# Thư mục chứa apk,jar đã mod: $TOME/Mod
# Tìm tập tin apk,jar chép vào $TOME/Mod: [ Timfile *.apk/*.jar ]
# Giải nén dex trong apk/jar từ thư mục $TOME/Mod: [ Unpackfile ] 
# Đóng gói lại dex thành jar/apk vào thư mục $TOME/Mod: [ Repackfile ]
# Đường dẫn thư mục system: /mnt/tmp/system/system 
# Đường dẫn thư mục vendor: /mnt/tmp/vendor 
# Đường dẫn thư mục product: /mnt/tmp/product 
# Đường dẫn thư mục system_ext: /mnt/tmp/system_ext

cuphap() {
# Nếu biết tên smali
noichua=$(find 'đường dẫn thư mục' -type f -name 'tên smali'); 
phuongthuc='phương thức cần tìm'
cuoi='phương thức cuối'
noidung='nội dung thay thế'
dong="nội dung cần tìm để thay dòng nếu có"
chạy lệnh: thayphuongthuc/chendau/chentruoc/chensau/thaygiua/thaythedoan/thaydoan/chendoan/thaydong/thaychuoi
boten; 
# Không biết tên smali
taptin=$(find 'đường dẫn thư mục' -type f -name '*.smali');
for noichua in $taptin; do
phuongthuc='phương thức cần tìm'
cuoi='phương thức cuối'
noidung='nội dung thay thế'
dong="nội dung cần tìm để thay dòng nếu có"
chạy lệnh: thayphuongthuc/chendau/chentruoc/chensau/thaygiua/thaythedoan/thaydoan/chendoan/thaydong/thaychuoi
boten;
done
}
#
Trinhcaidat() { 
for tjar in MIUIPackageInstaller.apk; do
Timfile "$tjar.apk"
if [[ -f $TOME/Mod/$tjar.apk ]]; then 
echo " Xử lý: $tjar.apk"
Unpackfile
taptin=$(find $TOME/Mod/$tjar -type f -name '*.smali');
for noichua in $taptin; do
phuongthuc='.method public static a(Landroid/content/pm/ApplicationInfo;)Z'; 
noidung='const/4 v0, 0x0\n return v0'; 
chendau
boten; 
done
Repackfile
fi 
done
}
Trinhcaidat
#
Caidat() {
for tjar in Joyose Settings; do
Timfile "$tjar.apk"
if [[ -f $TOME/Mod/$tjar.apk ]]; then 
echo " Xử lý: $tjar.apk"
Unpackfile
sudo sed -i 's/"MIUI "/"MIUID "/g' $TOME/Mod/$tjar/classes*/com/android/settings/device/MiuiAboutPhoneUtils.smali 2>/dev/null
sudo sed -i 's/"by xiaomi.eu"/"by MIUICC "/g' $TOME/Mod/$tjar/classes*/com/android/settings/device/MiuiAboutPhoneUtils.smali 2>/dev/null
sudo sed -i 's/"by "/" "/g' $TOME/Mod/$tjar/classes*/com/android/settings/device/MiuiAboutPhoneUtils.smali 2>/dev/null 
 if [[ "$TKM" == "1" ]]; then 
for m in MiuiUtils.smali MiuiSecuritySettings.smali MiuiDisplaySettings.smali display/PageLayoutFragment.smali MiuiSettings.smali; do sed -i 's/IS_INTERNATIONAL_BUILD/IS_ALPHA_BUILD/g' $TOME/Mod/$tjar/classes*/com/android/settings/$m 2>/dev/null; done
sed -i 's/sget-boolean v2, Lmiui\/os\/Build;->IS_GLOBAL_BUILD:Z/sget-boolean v2, Lmiui\/os\/Build;->IS_ALPHA_BUILD:Z/' $TOME/Mod/$tjar/classes*/com/android/settings/MiuiDisplaySettings.smali 2>/dev/null 
sed -i 's/sget-boolean v0, Lmiui\/os\/Build;->IS_ALPHA_BUILD:Z/sget-boolean v0, Lmiui\/os\/Build;->IS_INTERNATIONAL_BUILD:Z/' $TOME/Mod/$tjar/classes*/com/android/settings/MiuiSettings.smali 2>/dev/null 
noichua=$(find $TOME/Mod/$tjar -type f -name 'MiuiSettings.smali'); 
phuongthuc='IS_SUPPORT_TABLET_SCREEN_SETTINGS:Z'
noidung='IS_INTERNATIONAL_BUILD'
dong='IS_ALPHA_BUILD'
thaychuoi
boten;
noichua=$(find $$TOME/Mod/$tjar -type f -name 'MiuiSettings.smali'); 
phuongthuc='sget v10, Lcom/android/settings/R\$id;->mi_wallet_payment:I'
noidung='IS_INTERNATIONAL_BUILD'
dong='IS_ALPHA_BUILD'
thaychuoi
boten;
noichua=$(find $TOME/Mod/$tjar -type f -name 'MiuiSettings.smali'); 
phuongthuc='sget v10, Lcom/android/settings/R\$id;->system_apps_updater:I'
noidung='IS_ALPHA_BUILD'
dong='IS_GLOBAL_BUILD'
thaychuoi
boten;
 fi
 if [[ "$tjar" == "Joyose" ]]; then 
taptin=$(find $TOME/Mod/$tjar/ -type f -name '*.smali'); 
for noichua in $taptin; do
phuongthuc='GPUTUNER_SWITCH'
noidung='const/4 v0, 0x1'
dong='const/4 v0, 0x0'
thaydong
done
 fi
Repackfile
fi 
done
}
#Caidat
#
themcauhinh() { 
# Thêm file_contexts
systemfc='/system/system/lib64/libGLESv1\.so u:object_r:system_lib_file:s0
/system/system/lib64/libGLESv2\.so u:object_r:system_lib_file:s0
/system/system/lib/libGLESv1\.so u:object_r:system_lib_file:s0
/system/system/lib/libGLESv2\.so u:object_r:system_lib_file:s0
'

vendorfc='/vendor/lib/egl/libVkLayer_ADRENO_qprofiler\.so u:object_r:system_lib_file:s0
/vendor/lib/libdmabufheap\.so u:object_r:system_lib_file:s0
/vendor/lib/hw/vulkan\.adreno\.so u:object_r:same_process_hal_file:s0
/vendor/lib/notgsl\.so u:object_r:same_process_hal_file:s0
/vendor/lib/libadreno_app_profiles\.so u:object_r:same_process_hal_file:s0
/vendor/lib/libadreno_utils\.so u:object_r:same_process_hal_file:s0
/vendor/lib/libllvm-glnext\.so u:object_r:same_process_hal_file:s0
/vendor/lib/libllvm-qgl\.so u:object_r:same_process_hal_file:s0
/vendor/lib/libq3dtools_adreno\.so u:object_r:same_process_hal_file:s0
/vendor/lib/vendor\.qti\.hardware\.display\.mapper@3\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib/vendor\.qti\.hardware\.display\.mapper@4\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib/vendor\.qti\.hardware\.display\.mapperextensions@1\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib/vendor\.qti\.hardware\.display\.mapperextensions@1\.1\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/egl/libVkLayer_ADRENO_qprofiler\.so u:object_r:system_lib_file:s0
/vendor/lib64/libdmabufheap\.so u:object_r:system_lib_file:s0
/vendor/lib64/hw/vulkan\.adreno\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libc\+\+\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/gpu\+\+\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libadreno_app_profiles\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libadreno_utils\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libgsl\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libgsl\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/notgsl\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libllvm-glnext\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libllvm-qgl\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libq3dtools_adreno\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libEGL_adreno\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libGLESv2_adreno\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/libcutlis\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/vendor\.qti\.hardware\.display\.mapper@1\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/vendor\.qti\.hardware\.display\.mapper@2\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/vendor\.qti\.hardware\.display\.mapper@3\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/vendor\.qti\.hardware\.display\.mapper@4\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/vendor\.qti\.hardware\.display\.mapperextensions@1\.0\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/vendor\.qti\.hardware\.display\.mapperextensions@1\.1\.so u:object_r:same_process_hal_file:s0
/vendor/lib64/notllvm-glnext\.so u:object_r:same_process_hal_file:s0
/vendor/etc/permissions/public\.libraries\.txt u:object_r:same_process_hal_file:s0
/vendor/lib64/libcutils\.so u:object_r:same_process_hal_file:s0'

productfc=''

system_extfc=''

# Thêm fsconfig
systemfs=''

vendorfs='vendor/lib/egl/eglSubDriverAndroid.so 0 0 0644
vendor/lib/egl/libEGL_adreno.so 0 0 0644
vendor/lib/egl/libGLESv1_CM_adreno.so 0 0 0644
vendor/lib/egl/libGLESv2_adreno.so 0 0 0644
vendor/lib/egl/libq3dtools_adreno.so 0 0 0644
vendor/lib/egl/libq3dtools_esx.so 0 0 0644
vendor/lib/egl/libVkLayer_ADRENO_qprofiler.so 0 0 0644
vendor/lib/libdmabufheap.so 0 0 0644
vendor/lib/hw/vulkan.adreno.so 0 0 0644
vendor/lib/notgsl.so 0 0 0644
vendor/lib/libadreno_app_profiles.so 0 0 0644
vendor/lib/libadreno_utils.so 0 0 0644
vendor/lib/libbase64.so 0 0 0644
vendor/lib/libllvm-glnext.so 0 0 0644
vendor/lib/libllvm-qgl.so 0 0 0644
vendor/lib/libq3dtools_adreno.so 0 0 0644
vendor/lib/vendor.qti.hardware.display.mapper@3.0.so 0 0 0644
vendor/lib/vendor.qti.hardware.display.mapper@4.0.so 0 0 0644
vendor/lib/vendor.qti.hardware.display.mapperextensions@1.0.so 0 0 0644
vendor/lib/vendor.qti.hardware.display.mapperextensions@1.1.so 0 0 0644
vendor/lib64/egl/eglSubDriverAndroid.so 0 0 0644
vendor/lib64/egl/libEGL_adreno.so 0 0 0644
vendor/lib64/egl/libGLESv1_CM_adreno.so 0 0 0644
vendor/lib64/egl/libGLESv2_adreno.so 0 0 0644
vendor/lib64/egl/libq3dtools_adreno.so 0 0 0644
vendor/lib64/egl/libq3dtools_esx.so 0 0 0644
vendor/lib64/egl/libVkLayer_ADRENO_qprofiler.so 0 0 0644
vendor/lib64/libdmabufheap.so 0 0 0644
vendor/lib64/hw/vulkan.adreno.so 0 0 0644
vendor/lib64/libc++.so 0 0 0644
vendor/lib64/gpu++.so 0 0 0644
vendor/lib64/libadreno_app_profiles.so 0 0 0644
vendor/lib64/libadreno_utils.so 0 0 0644
vendor/lib64/libgsl.so 0 0 0644
vendor/lib64/libgsl.so 0 0 0644
vendor/lib64/notgsl.so 0 0 0644
vendor/lib64/libgpudataproducer.so 0 0 0644
vendor/lib64/libbase64.so 0 0 0644
vendor/lib64/libllvm-glnext.so 0 0 0644
vendor/lib64/libllvm-qgl.so 0 0 0644
vendor/lib64/libq3dtools_adreno.so 0 0 0644
vendor/lib64/libEGL_adreno.so 0 0 0644
vendor/lib64/libGLESv2_adreno.so 0 0 0644
vendor/lib64/libcutlis.so 0 0 0644
vendor/lib64/vendor.qti.hardware.display.mapper@1.0.so 0 0 0644
vendor/lib64/vendor.qti.hardware.display.mapper@2.0.so 0 0 0644
vendor/lib64/vendor.qti.hardware.display.mapper@3.0.so 0 0 0644
vendor/lib64/vendor.qti.hardware.display.mapper@4.0.so 0 0 0644
vendor/lib64/vendor.qti.hardware.display.mapperextensions@1.0.so 0 0 0644
vendor/lib64/vendor.qti.hardware.display.mapperextensions@1.1.so 0 0 0644
vendor/lib64/notllvm-glnext.so 0 0 0644
vendor/etc/permissions/public.libraries.txt 0 0 0644
vendor/firmware/a650_sqe.fw 0 0 0644
vendor/firmware/a650_gmu.bin 0 0 0644
vendor/lib64/libcutils.so 0 0 0644
vendor/firmware/FOD_Motion_Aurora_RTP.bin 0 0 0644
vendor/firmware/FOD_Motion_Flare_RTP.bin 0 0 0644
vendor/firmware/FOD_Motion_Planet_RTP.bin 0 0 0644
vendor/firmware/FOD_Motion_Ripple_RTP.bin 0 0 0644
vendor/firmware/FOD_Motion_Triang_RTP.bin 0 0 0644
vendor/firmware/FOD_Motion_Spiral_RTP.bin 0 0 0644
vendor/firmware/Gesture_Back_Pull_RTP.bin 0 0 0644
vendor/firmware/Gesture_Back_Release_RTP.bin 0 0 0644
vendor/firmware/aw8697_haptic.bin 0 0 0644
vendor/firmware/notification_cleanall_rtp.bin 0 0 0644
vendor/firmware/task_cleanall_rtp.bin 0 0 0644
vendor/lib/rfsa/adsp/misound_res.bin 0 0 0644
vendor/lib/rfsa/adsp/misound_karaokemix_res.bin 0 0 0644
vendor/lib/rfsa/adsp/misound_karaoke_res.bin 0 0 0644
vendor/lib/rfsa/adsp/misound_res_headphone.bin 0 0 0644
vendor/lib/rfsa/adsp/misound_res_spk.bin 0 0 0644'
productfs=''

system_extfs=''
}
#
ngonngu() { 
if [[ "$NN" == "VI" ]]; then echo " * Thêm ngôn ngữ..."
mkdir -p $TOME/VH
#Taive "https://github.com/kakathic/ZH-VN/releases/download/HH/TT_1.8.Zip" "$TOME/VH.zip"
Taive "https://github.com/chamchamfy/toolcc/raw/main/overlay.zip" "$TOME/VH.zip"
7za x -tzip -y "$TOME/VH.zip" -o$TOME/VH >/dev/null
[[ -e /mnt/tmp/product/overlay ]] && TMVH=/mnt/tmp/product/overlay || TMVH=/mnt/tmp/vendor/overlay
sudo cp -af $TOME/VH/apk/* $TMVH
[[ -d /mnt/tmp/system/system/media ]] && sudo cp -rf $TOME/VH/framework-miui-res /mnt/tmp/system/system/media/theme/default || sudo cp -rf $TOME/VH/framework-miui-res /mnt/tmp/product/media/theme/default
sudo rm -rf $TOME/VH
fi
} 
ngonngu
#
if [[ "$HK" == "1" ]]; then echo " * Thêm Harman Kardon..."
mkdir -p $TOME/tam
unzip -qo $TOME/.github/HarmanKardon.zip -d $TOME/tam
sudo cp -af $TOME/tam/system/vendor/* /mnt/tmp/vendor 
themp=$(sudo grep 'import' /mnt/tmp/vendor/build.prop)
sudo sed -i '/import/d' /mnt/tmp/vendor/build.prop
sudo bash -c "cat $TOME/tam/system.prop >> /mnt/tmp/vendor/build.prop"
sudo bash -c "echo '$themp' >> /mnt/tmp/vendor/build.prop"
sudo bash -c "cat $TOME/tam/system.prop | sed -e '/# Tweak/d' >> /mnt/tmp/system/system/build.prop"
sudo rm -rf $TOME/tam
fi 
#
if [[ "$GPU" == "1" ]]; then 
 if [[ "$GPU770" == "1" ]]; then 
 Taive "https://github.com/chamchamfy/toolcc/raw/main/AdrenoGPUDriver770.zip" "$TOME/AdrenoGPUDriver.zip"
 elif [[ "$GPU725" == "1" ]]; then 
 Taive "https://github.com/chamchamfy/toolcc/raw/main/AdrenoGPUDriver725.zip" "$TOME/AdrenoGPUDriver.zip"
 elif [[ "$GPU615" == "1" ]]; then 
 Taive "https://github.com/chamchamfy/toolcc/raw/main/AdrenoGPUDriver615.zip" "$TOME/AdrenoGPUDriver.zip"
 fi 
if [[ -s "$TOME/AdrenoGPUDriver.zip" ]]; then echo " * Thêm Adreno GPU Driver..."
mkdir -p $TOME/tam
7za x -tzip -y $TOME/AdrenoGPUDriver.zip -o$TOME/tam >/dev/null
sudo cp -af $TOME/tam/system/vendor/* /mnt/tmp/vendor 
themp=$(sudo grep 'import' /mnt/tmp/vendor/build.prop)
sudo sed -i '/import/d' /mnt/tmp/vendor/build.prop
sudo bash -c "cat $TOME/tam/system.prop | sed -e '/# Tweak/d' >> /mnt/tmp/vendor/build.prop"
sudo bash -c "echo '$themp' >> /mnt/tmp/vendor/build.prop"
sudo bash -c "cat $TOME/tam/system.prop | sed -e '/# Tweak/d' >> /mnt/tmp/system/system/build.prop"
sudo rm -rf $TOME/tam $TOME/AdrenoGPUDriver.zip
fi 
fi 
#
if [[ "$tenmamay" == "alioth" ]]; then 
 Taive "https://sourceforge.net/projects/toolkudotwrp/files/kudo/Elite_TWRP_weekly.zip" "$TOME/appmod.zip"
 if [[ -s "$TOME/appmod.zip" ]]; then echo " * Thêm App Mod..."
 mkdir -p $TOME/tam
 7za x -tzip -y $TOME/appmod.zip -o$TOME/tam >/dev/null
 sudo cp -af $TOME/tam/product/*app /mnt/tmp/product 2>/dev/null
 sudo cp -af $TOME/tam/vendor/*app /mnt/tmp/vendor 2>/dev/null
 sudo cp -af $TOME/tam/system_ext/*app /mnt/tmp/system_ext 2>/dev/null
 sudo cp -af $TOME/tam/system/*app /mnt/tmp/system/system 2>/dev/null
 sudo rm -rf $TOME/tam $TOME/appmod.zip
 fi
fi
#
#
if [[ -n "$(echo "$URL" | grep 'CNXM')" ]]; then echo " * Thêm Gói Gapp..."
 Taive "https://sourceforge.net/projects/nikgapps/files/Releases/NikGapps-T/16-Jul-2023/NikGapps-basic-arm64-13-20230716-signed.zip" "$TOME/gapp.zip"
 if [[ -s "$TOME/gapp.zip" ]]; then 
 mkdir -p $TOME/gapp $TOME/tam
 7za x -tzip -y $TOME/gapp.zip -o$TOME/tam >/dev/null
 for f in $TOME/tam/AppSet/CarrierServices/*.zip $TOME/tam/AppSet/Core/*.zip; do 
 7za x -tzip -y $f -o$TOME/gapp >/dev/null
 done
 for t in $TOME/gapp/*/*; do
  if [[ -d $t ]]; then 
   t1=$(echo $t | awk -F__ '{print $2}')
   t2=$(echo $t | awk -F__ '{print $3}')
   t3=$(echo $t | awk -F__ '{print $4}')
   t4=$(echo $t | awk -F__ '{print $5}')
   t5=$(echo $t | awk -F__ '{print $6}')
   tm="/mnt/tmp/product/$t1/$t2/$t3/$t4/$t5"
   sudo mkdir -p $tm
   sudo cp -af $t/* $tm
  fi
 done
 sudo rm -rf $TOME/tam $TOME/gapp $TOME/gapp.zip
 fi
fi
#
#
if [[ "$twrp" == "1" ]]; then echo " * Thêm BOOT TWRP $tenmamay..."
 mkdir -p $TOME/twrp
 if [[ -n "$(echo "$URL" | grep 'MIXM')" ]]; then linktwrp="https://sourceforge.net/projects/chamchamfy/files/Tools/boot_global_$tenmamay.img"
 elif [[ -n "$(echo "$URL" | grep 'TWXM')" ]]; then linktwrp="https://sourceforge.net/projects/chamchamfy/files/Tools/boot_tw_$tenmamay.img"
 elif [[ -n "$(echo "$URL" | grep 'IDXM')" ]]; then linktwrp="https://sourceforge.net/projects/chamchamfy/files/Tools/boot_id_$tenmamay.img"
 elif [[ -n "$(echo "$URL" | grep 'EUXM')" ]]; then linktwrp="https://sourceforge.net/projects/chamchamfy/files/Tools/boot_eu_$tenmamay.img"
 elif [[ -n "$(echo "$URL" | grep 'CNXM')" ]]; then linktwrp="https://sourceforge.net/projects/chamchamfy/files/Tools/boot_cn_$tenmamay.img"
 else
[[ "$tenmamay" == "vili" ]] && linktwrp='https://sourceforge.net/projects/recovery-for-xiaomi-devices/files/vili/twrp-3.7.0_12-v7.9_A13-vili-skkk.img'
[[ "$tenmamay" == "alioth" ]] && linktwrp='https://sourceforge.net/projects/recovery-for-xiaomi-devices/files/alioth/twrp-3.7.0_12-v7.9_A13-alioth-skkk.img'
 fi
Taive "$linktwrp" "$TOME/twrp/boot.img"
#wget "$linktwrp" -O "$TOME/twrp/boot.img"
du -m $TOME/twrp/boot.img 2>/dev/null
fi
#
themcauhinh
